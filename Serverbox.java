/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package server;

import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author DIVYA
 */
public class Serverbox extends javax.swing.JFrame {

    /**
     * Creates new form Serverbox
     */
   
        MultiServer ml;
   
    
    public Serverbox() {
        initComponents();
        setResizable(false);
        setTitle("CHAT BOX");
        setLocation(850, 300);
        tport.requestFocus();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }
    public class MultiServer extends Thread
    {
        private Socket s;
        private ServerSocket ss;
        ArrayList<Socket> listSock;
        
        
public class ProcessClient extends Thread
    {
    
        private PrintWriter pw;
        private BufferedReader br;
        //InputStreamReader isr;
         private Socket s;
         private String name;
          
        public ProcessClient(Socket s, String name) 
        {
          try
          {
              this.s = s;
              this.name = name;
             
               br = new BufferedReader(new InputStreamReader(s.getInputStream()));
                OutputStream ostream = s.getOutputStream();
             pw = new PrintWriter(ostream, true);
          }
          catch(Exception e)
          {
              JOptionPane.showMessageDialog(null, e.getMessage());
          }
        }
        public void run()
        {
             String msg;
            try
            { 
                ta1.append("\n" + name + " SIGNED In");
                
                while((msg = br.readLine()) != null)
                {
                     ta1.append("\n" + name + " say's > " + msg);
                      
                     for (int x = 0; x < listSock.size(); x++) {
                            Socket temp = (Socket)listSock.get(x);


                            PrintWriter out = new PrintWriter(temp.getOutputStream(), true);
                            out.println("\n" + "" + name + ":" + msg);

                            ta1.append("\n" + "The message-- " + msg + "-- sent from server end ");


                        }//end for

                    }//while

                    ta1.append("\n" + name + " has LOGGED Off");

                }
                catch(Exception e)
                {
                   JOptionPane.showMessageDialog(null, e.getMessage());
                }
            //  ta1.append(msg + "\n");
              
        

        } // end run
}  // end ProcessClient class in which the thread is present
public MultiServer(int p)
{
    try
    {
        ss = new ServerSocket(p);
        ta1.setText("Server UP and Running ");
        listSock = new ArrayList<Socket>();
    }
    catch(Exception e)
    {
        JOptionPane.showMessageDialog(null, e.getMessage());
    }
}
public void run()
{
            BufferedReader brc;
            ProcessClient p;
            String name;
            try {
                for (int x = 0; x < 100; x++) {
                    s = ss.accept();
                    listSock.add(s);
                    brc = new BufferedReader(new InputStreamReader(s.getInputStream()));
                    name = brc.readLine();
                    p = new ProcessClient(s, name);
                    p.start();
                }
                ss.close();
            } catch (Exception e) 
            {
              JOptionPane.showMessageDialog(null, e.getMessage());
            }
} // end of run
    }   // end of MultiServer class
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tport = new javax.swing.JTextField();
        bstart = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta1 = new javax.swing.JTextArea();
        bstop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SERVER BOX");
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Port Number");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        tport.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        bstart.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        bstart.setText("Connect");
        bstart.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bstart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bstartActionPerformed(evt);
            }
        });

        ta1.setColumns(20);
        ta1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        ta1.setRows(5);
        jScrollPane1.setViewportView(ta1);

        bstop.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        bstop.setText("Stop");
        bstop.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bstop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bstopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(281, 281, 281)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(tport, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bstart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bstop)))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bstart)
                            .addComponent(bstop)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1)
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bstartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bstartActionPerformed
        // TODO add your handling code here:
        ml= new MultiServer(Integer.parseInt(tport.getText()));
         ml.start();                 
    }//GEN-LAST:event_bstartActionPerformed

    private void bstopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bstopActionPerformed
        // TODO add your handling code here:
        
        
        ml.stop();

        ta1.setText("\n" + "Sever stopped");
    }//GEN-LAST:event_bstopActionPerformed

    /**
     * @param args the command line arguments
     */
  
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bstart;
    private javax.swing.JButton bstop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea ta1;
    private javax.swing.JTextField tport;
    // End of variables declaration//GEN-END:variables
}
